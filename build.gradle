import aQute.bnd.gradle.Bundle

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2'
    }
}
plugins {
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.hierynomus.license' version '0.15.0'
}

apply plugin: 'java'
apply plugin: 'idea'

apply plugin: 'biz.aQute.bnd.builder'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

//def releaseVersion = System.properties.RELEASE_VERSION
//version = releaseVersion ? releaseVersion : new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

release {
    tagTemplate = 'v${version}'
    failOnPublishNeeded = false
    failOnCommitNeeded = false
}

repositories {
    mavenCentral()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        doLast {
            options.compilerArgs += "-parameters"
        }
    }
}

dependencies {
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'com.graphql-java:graphql-java:16.2'

    // OSGi
    compileOnly 'org.osgi:org.osgi.core:6.0.0'
    compileOnly 'org.osgi:org.osgi.service.cm:1.5.0'
    compileOnly 'org.osgi:org.osgi.service.component:1.3.0'
    compileOnly 'biz.aQute.bnd:biz.aQute.bndlib:3.2.0'

    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.+'
}

test.useTestNG()

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId 'io.github.graphql-java'
            artifactId project.name
            version project.version

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'graphql-java-annotations'
                    description 'Annotations-based syntax for GraphQL schema definition'
                    url 'https://github.com/graphql-java/graphql-java-annotations'
                    inceptionYear '2016'

                    scm {
                        url 'https://github.com/graphql-java/graphql-java-annotations'
                        connection 'scm:https://yrashk@github.com/graphql-java/graphql-java-annotations.git'
                        developerConnection 'scm:git://github.com/graphql-java/graphql-java-annotations.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'yrashk'
                            name 'Yurii Rashkovskii'
                            email 'yrashk@gmail.com'
                        }
                        developer {
                            id 'apottere'
                            name 'Andrew Potter'
                            email 'Andrew.Potter@coxautoinc.com'
                        }
                        developer {
                            id 'bbakerman'
                            name 'Brad Baker'
                            email 'bbakerman@gmail.com'
                        }
                        developer {
                            id 'yarinvak'
                            name 'Yarin Vaknin'
                            email 'yarinvak@gmail.com'
                        }
                        developer {
                            id 'guy120494'
                            name 'Guy Smorodinsky'
                        }
                        developer {
                            id 'osher-sade'
                            name 'Osher Sade'
                        }
                    }
                }
            }
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload

bintray {
    user = System.getenv('BINTRAY_USER') ?: project.findProperty('BINTRAY_USER') ?: ''
    key = System.getenv('BINTRAY_KEY') ?: project.findProperty('BINTRAY_KEY') ?: ''
    publications = ['maven']
    publish = true
    pkg {
        desc = 'This library offers an annotations-based syntax for GraphQL schema definition.'
        repo = 'graphql-java-annotations'
        name = 'graphql-java-annotations'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/graphql-java/graphql-java-annotations'
        version {
            name = project.version
            released = new Date()
            gpg {
                sign = false
            }
            mavenCentralSync {
                sync = true //[Default: true] Determines whether to sync the version to Maven Central..
                user = System.getenv('OSS_USER') ?: project.findProperty('OSS_USER') ?: ''
                password = System.getenv('OSS_PASS') ?: project.findProperty('OSS_PASS') ?: ''
                close = '1'
                //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}

task bundle(type: Bundle) {
    from sourceSets.main.output
    bndfile = file('bundle.bnd')
}

wrapper {
    gradleVersion = '6.5.1'
}
