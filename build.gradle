import aQute.bnd.gradle.Bundle

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}
plugins {
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.hierynomus.license' version '0.15.0'
    id "com.jfrog.artifactory" version "4.9.3"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "com.jfrog.artifactory"

apply plugin: 'biz.aQute.bnd.builder'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

//def releaseVersion = System.properties.RELEASE_VERSION
//version = releaseVersion ? releaseVersion : new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

release {
    tagTemplate = 'v${version}'
    failOnPublishNeeded = false
    failOnCommitNeeded = false
}

repositories {
    mavenCentral()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        doLast {
            options.compilerArgs += "-parameters"
        }
    }
}

dependencies {
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'com.graphql-java:graphql-java:16.2'

    // OSGi
    compileOnly 'org.osgi:org.osgi.core:6.0.0'
    compileOnly 'org.osgi:org.osgi.service.cm:1.5.0'
    compileOnly 'org.osgi:org.osgi.service.component:1.3.0'
    compileOnly 'biz.aQute.bnd:biz.aQute.bndlib:3.2.0'

    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.+'
}

test.useTestNG()

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId 'io.github.graphql-java'
            artifactId project.name
            version project.version

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'graphql-java-annotations'
                    description 'Annotations-based syntax for GraphQL schema definition'
                    url 'https://github.com/graphql-java/graphql-java-annotations'
                    inceptionYear '2016'

                    scm {
                        url 'https://github.com/graphql-java/graphql-java-annotations'
                        connection 'scm:https://yrashk@github.com/graphql-java/graphql-java-annotations.git'
                        developerConnection 'scm:git://github.com/graphql-java/graphql-java-annotations.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'yrashk'
                            name 'Yurii Rashkovskii'
                            email 'yrashk@gmail.com'
                        }
                        developer {
                            id 'apottere'
                            name 'Andrew Potter'
                            email 'Andrew.Potter@coxautoinc.com'
                        }
                        developer {
                            id 'bbakerman'
                            name 'Brad Baker'
                            email 'bbakerman@gmail.com'
                        }
                        developer {
                            id 'yarinvak'
                            name 'Yarin Vaknin'
                            email 'yarinvak@gmail.com'
                        }
                        developer {
                            id 'guy120494'
                            name 'Guy Smorodinsky'
                        }
                        developer {
                            id 'osher-sade'
                            name 'Osher Sade'
                        }
                    }
                }
            }
        }
    }
}

afterReleaseBuild.dependsOn artifactoryPublish

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())

    contextUrl = 'https://yarinvk.jfrog.io/artifactory/default-maven-virtual'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = 'yarinvak@gmail.com' //System.getenv('JFROG_USER') // The publisher user name
            password = 'eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJlckk1d25pVWF0X1RoLW9jRC1hZmowd05KVDRBV3RMbDFMMHh1em5NVFgwIn0.eyJzdWIiOiJqZmZlQDAwMFwvdXNlcnNcL3lhcmludmFrQGdtYWlsLmNvbSIsInNjcCI6ImFwcGxpZWQtcGVybWlzc2lvbnNcL2FkbWluIGFwaToqIiwiYXVkIjpbImpmcnRAKiIsImpmbWRAKiIsImpmZXZ0QCoiLCJqZmFjQCoiXSwiaXNzIjoiamZmZUAwMDAiLCJpYXQiOjE2MjE5NzM3NzMsImp0aSI6IjVkOTUxNWZlLTM0ODctNDA2Ny1hNjdmLTYwYmJkNjJhYjcwYiJ9.oHE_tFOGuxWkKZ_6E0-1A8AieMIPe9SW1TdWiwheUdEwpVysSgtaTpFNBICKTp_KrDIcCycu4IamcqiakMrYjgDGAN5imzRc-E2Rtn4LmKf5EuKTLdZHKZhKtMEVclrUUg6NjS0M_fRrfdP35yrZrE_A2SsUoLRCUlaGqgLyEpUewxI22U0IAi4kwOUY1f4lRf_2sb4aGE1wFNN2I3cLhEn5AFjeQsQzxa12Oc7CxTSk6un5F5lhpQchDBgy4YaJcnaYlblR0vnVSX_iKlfn7YW21-48ijOq-aOjib5rgY3gK2fFoWsdgFSKM69mYhLwLVbqSRueuk87ICVpCUjyhw' // The publisher password
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = true // Publish generated POM files to Artifactory (true by default)
            publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
}

task bundle(type: Bundle) {
    from sourceSets.main.output
    bndfile = file('bundle.bnd')
}

wrapper {
    gradleVersion = '6.5.1'
}
